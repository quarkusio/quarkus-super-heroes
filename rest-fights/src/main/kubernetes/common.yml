---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: default_view
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
  - kind: ServiceAccount
    name: default
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: rest-fights-config-creds
  labels:
    app: rest-fights
    application: fights-service
    system: quarkus-super-heroes
data:
  quarkus.mongodb.credentials.username: c3VwZXJmaWdodA==
  quarkus.mongodb.credentials.password: c3VwZXJmaWdodA==
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: fights-db-config
  labels:
    app: fights-db
    application: fights-service
    system: quarkus-super-heroes
data:
  MONGODB_DATABASE: ZmlnaHRz
  MONGODB_USERNAME: c3VwZXJmaWdodA==
  MONGODB_PASSWORD: c3VwZXJmaWdodA==
  MONGODB_ROOT_USER: c3VwZXI=
  MONGODB_ROOT_PASSWORD: c3VwZXI=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fights-db
    application: fights-service
    system: quarkus-super-heroes
    app.kubernetes.io/part-of: fights-service
    app.openshift.io/runtime: mongodb
  name: fights-db
spec:
  replicas: 1
  selector:
    matchLabels:
      name: fights-db
  template:
    metadata:
      labels:
        application: fights-service
        name: fights-db
        system: quarkus-super-heroes
    spec:
      containers:
        - image: bitnami/mongodb:7.0
          name: fights-db
          ports:
            - containerPort: 27017
          envFrom:
            - secretRef:
                name: fights-db-config
          resources:
            limits:
              memory: 256Mi
            requests:
              memory: 64Mi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: fights-db
    application: fights-service
    system: quarkus-super-heroes
  name: fights-db
spec:
  ports:
    - port: 27017
      protocol: TCP
      targetPort: 27017
  selector:
    name: fights-db
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fights-kafka
    application: fights-service
    system: quarkus-super-heroes
    app.kubernetes.io/part-of: fights-service
    app.openshift.io/runtime: amq
  name: fights-kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      name: fights-kafka
  template:
    metadata:
      labels:
        application: fights-service
        name: fights-kafka
        system: quarkus-super-heroes
    spec:
      containers:
        - image: quay.io/strimzi/kafka:0.43.0-kafka-3.8.0
          name: fights-kafka
          ports:
            - containerPort: 9092
          command:
            - "sh"
            - "-c"
            - "export CLUSTER_ID=$(bin/kafka-storage.sh random-uuid) && bin/kafka-storage.sh format -t ${CLUSTER_ID} -c config/kraft/server.properties && bin/kafka-server-start.sh config/kraft/server.properties --override advertised.listeners=${KAFKA_ADVERTISED_LISTENERS}"
          env:
            - name: LOG_DIR
              value: /tmp/logs
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://fights-kafka:9092
          resources:
            limits:
              memory: 768Mi
            requests:
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: fights-kafka
    application: fights-service
    system: quarkus-super-heroes
  name: fights-kafka
spec:
  ports:
    - port: 9092
      protocol: TCP
      targetPort: 9092
  selector:
    name: fights-kafka
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /metrics
    prometheus.io/port: "8080"
    prometheus.io/scheme: http
  labels:
    app: apicurio
    application: fights-service
    system: quarkus-super-heroes
    app.kubernetes.io/part-of: fights-service
    app.kubernetes.io/name: apicurio
    app.kubernetes.io/version: 2.2.3.Final
    app.openshift.io/runtime: apicurio
  name: apicurio
spec:
  replicas: 1
  selector:
    matchLabels:
      name: apicurio
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: http
      labels:
        application: fights-service
        name: apicurio
        system: quarkus-super-heroes
    spec:
      containers:
        - image: quay.io/apicurio/apicurio-registry-mem:2.6.5.Final
          name: apicurio
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          env:
            - name: REGISTRY_AUTH_ANONYMOUS_READ_ACCESS_ENABLED
              value: "true"
          resources:
            limits:
              memory: 768Mi
            requests:
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /metrics
    prometheus.io/port: "8080"
    prometheus.io/scheme: http
  labels:
    name: apicurio
    application: fights-service
    system: quarkus-super-heroes
  name: apicurio
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    name: apicurio
  type: ClusterIP
