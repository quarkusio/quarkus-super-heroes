#######################################################################
# THIS FILE IS AUTOMATICALLY GENERATED DURING CI/CD.
# ANY LOCAL CHANGES YOU MAKE SHOULD NOT BE COMMITTED TO SOURCE CONTROL.
#######################################################################

---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: grpc-locations
    application: locations-service
    system: quarkus-super-heroes
  name: grpc-locations-config-creds
data:
  quarkus.datasource.username: bG9jYXRpb25z
  quarkus.datasource.password: bG9jYXRpb25z
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: locations-db
    application: locations-service
    system: quarkus-super-heroes
  name: locations-db-config
data:
  MARIADB_DATABASE: bG9jYXRpb25zX2RhdGFiYXNl
  MARIADB_USER: bG9jYXRpb25z
  MARIADB_PASSWORD: bG9jYXRpb25z
  MARIADB_ROOT_PASSWORD: bG9jYXRpb25z
type: Opaque
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: grpc-locations
    application: locations-service
    system: quarkus-super-heroes
  name: grpc-locations-config
data:
  quarkus.hibernate-orm.database.generation: validate
  quarkus.hibernate-orm.sql-load-script: no-file
  quarkus.datasource.jdbc.url: jdbc:mariadb://locations-db:3306/locations_database
  quarkus.otel.exporter.otlp.traces.endpoint: http://otel-collector:4317
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: locations-db
    application: locations-service
    system: quarkus-super-heroes
  name: locations-db-init
data:
  get-data.sh: |-
    #!/bin/bash

    curl https://raw.githubusercontent.com/quarkusio/quarkus-super-heroes/main/grpc-locations/deploy/db-init/initialize-tables.sql --output /docker-entrypoint-startdb.d/1-init-tables.sql
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: locations-db
    application: locations-service
    system: quarkus-super-heroes
  name: locations-db
spec:
  ports:
    - port: 3306
      protocol: TCP
      targetPort: 3306
  selector:
    name: locations-db
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.openshift.io/vcs-uri: <<unknown>>
    app.openshift.io/connects-to: "locations-db,otel-collector"
    app.openshift.io/vcs-ref: main
    app.openshift.io/vcs-url: https://github.com/quarkusio/quarkus-super-heroes
    app.quarkus.io/quarkus-version: 3.11.1
    app.quarkus.io/vcs-uri: https://github.com/quarkusio/quarkus-super-heroes.git
    app.quarkus.io/build-timestamp: 2024-06-06 - 12:41:19 +0000
    prometheus.io/scrape: "true"
    prometheus.io/path: /q/metrics
    prometheus.io/port: "8089"
    prometheus.io/scheme: http
  labels:
    app.kubernetes.io/name: grpc-locations
    app.kubernetes.io/part-of: locations-service
    app.kubernetes.io/version: native-latest
    app: grpc-locations
    application: locations-service
    system: quarkus-super-heroes
    app.kubernetes.io/managed-by: quarkus
    app.openshift.io/runtime: quarkus
  name: grpc-locations
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8089
  selector:
    app.kubernetes.io/name: grpc-locations
    app.kubernetes.io/part-of: locations-service
    app.kubernetes.io/version: native-latest
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: locations-db
    application: locations-service
    system: quarkus-super-heroes
    app.kubernetes.io/part-of: locations-service
    app.openshift.io/runtime: mariadb
  name: locations-db
spec:
  replicas: 1
  selector:
    matchLabels:
      name: locations-db
  template:
    metadata:
      annotations:
        alpha.image.policy.openshift.io/resolve-names: '*'
      labels:
        application: locations-service
        name: locations-db
    spec:
      containers:
        - env:
            - name: MARIADB_SKIP_TEST_DB
              value: "true"
          envFrom:
            - secretRef:
                name: locations-db-config
          image: bitnami/mariadb:10.11
          name: locations-db
          ports:
            - containerPort: 3306
          resources:
            limits:
              memory: 256Mi
            requests:
              memory: 64Mi
          volumeMounts:
            - mountPath: /bitnami/mariadb
              name: locations-db-data
            - mountPath: /docker-entrypoint-startdb.d
              name: locations-initdata
      initContainers:
        - command:
            - sh
            - get-data.sh
          image: registry.access.redhat.com/ubi8-minimal:8.6
          name: get-data
          volumeMounts:
            - mountPath: /docker-entrypoint-startdb.d
              name: locations-initdata
            - mountPath: /tmp/dbinit
              name: locations-db-init
          workingDir: /tmp/dbinit
      volumes:
        - emptyDir: {}
          name: locations-db-data
        - emptyDir: {}
          name: locations-initdata
        - configMap:
            name: locations-db-init
          name: locations-db-init
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.openshift.io/vcs-uri: <<unknown>>
    app.openshift.io/connects-to: "locations-db,otel-collector"
    app.openshift.io/vcs-ref: main
    app.openshift.io/vcs-url: https://github.com/quarkusio/quarkus-super-heroes
    app.quarkus.io/quarkus-version: 3.11.1
    app.quarkus.io/vcs-uri: https://github.com/quarkusio/quarkus-super-heroes.git
    app.quarkus.io/build-timestamp: 2024-06-06 - 12:41:19 +0000
    prometheus.io/scrape: "true"
    prometheus.io/path: /q/metrics
    prometheus.io/port: "8089"
    prometheus.io/scheme: http
  labels:
    app: grpc-locations
    application: locations-service
    system: quarkus-super-heroes
    app.kubernetes.io/managed-by: quarkus
    app.openshift.io/runtime: quarkus
    app.kubernetes.io/name: grpc-locations
    app.kubernetes.io/part-of: locations-service
    app.kubernetes.io/version: native-latest
  name: grpc-locations
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grpc-locations
      app.kubernetes.io/part-of: locations-service
      app.kubernetes.io/version: native-latest
  template:
    metadata:
      annotations:
        alpha.image.policy.openshift.io/resolve-names: '*'
        app.openshift.io/vcs-uri: <<unknown>>
        app.openshift.io/connects-to: "locations-db,otel-collector"
        app.openshift.io/vcs-ref: main
        app.openshift.io/vcs-url: https://github.com/quarkusio/quarkus-super-heroes
        app.quarkus.io/quarkus-version: 3.11.1
        app.quarkus.io/vcs-uri: https://github.com/quarkusio/quarkus-super-heroes.git
        app.quarkus.io/build-timestamp: 2024-06-06 - 12:41:19 +0000
        prometheus.io/scrape: "true"
        prometheus.io/path: /q/metrics
        prometheus.io/port: "8089"
        prometheus.io/scheme: http
      labels:
        app: grpc-locations
        application: locations-service
        system: quarkus-super-heroes
        app.kubernetes.io/managed-by: quarkus
        app.openshift.io/runtime: quarkus
        app.kubernetes.io/name: grpc-locations
        app.kubernetes.io/part-of: locations-service
        app.kubernetes.io/version: native-latest
    spec:
      containers:
        - envFrom:
            - secretRef:
                name: grpc-locations-config-creds
            - configMapRef:
                name: grpc-locations-config
          image: quay.io/quarkus-super-heroes/grpc-locations:native-latest
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 8089
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: grpc-locations
          ports:
            - containerPort: 8089
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 8089
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              memory: 128Mi
            requests:
              memory: 32Mi
          startupProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/started
              port: 8089
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  annotations:
    app.openshift.io/vcs-uri: <<unknown>>
    app.openshift.io/connects-to: "locations-db,otel-collector"
    app.openshift.io/vcs-ref: main
    app.openshift.io/vcs-url: https://github.com/quarkusio/quarkus-super-heroes
    app.quarkus.io/quarkus-version: 3.11.1
    app.quarkus.io/vcs-uri: https://github.com/quarkusio/quarkus-super-heroes.git
    app.quarkus.io/build-timestamp: 2024-06-06 - 12:41:19 +0000
  labels:
    app.kubernetes.io/name: grpc-locations
    app.kubernetes.io/part-of: locations-service
    app.kubernetes.io/version: native-latest
    app: grpc-locations
    application: locations-service
    system: quarkus-super-heroes
    app.kubernetes.io/managed-by: quarkus
    app.openshift.io/runtime: quarkus
  name: grpc-locations
spec:
  port:
    targetPort: http
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  to:
    kind: Service
    name: grpc-locations
